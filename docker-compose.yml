version: "3.9"

services:
  expense:
    build: ./expense-service
    container_name: expense-service
    volumes:
      - ./expense-service:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/expensedb
    depends_on:
      - db
    command: sh -c "npm install && npx nodemon --legacy-watch index.js"

  notification:
    build: ./notification-service
    container_name: notification-service
    volumes:
      - ./notification-service:/usr/src/app   
      - /usr/src/app/node_modules     
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/notificationdb
    depends_on:
      - db
    command: sh -c "npm install && npx nodemon --legacy-watch index.js"

  auth:
    build: ./auth-service
    container_name: auth-service
    volumes:
      - ./auth-service:/usr/src/app   
      - /usr/src/app/node_modules     
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/authdb
    depends_on:
      - db
    command: sh -c "npm install && npx nodemon --legacy-watch index.js"

  db:
    image: postgres:15
    container_name: db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: db
    volumes:
      - ./db-init/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgres-data:/var/lib/postgresql/data   

  gateway:
    build: ./gateway
    container_name: gateway
    ports:
      - "3000:3000"
    volumes:
      - ./gateway:/usr/src/app   
      - /usr/src/app/node_modules     
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/authdb
    depends_on:
      - db
      - auth
      - expense
      - notification
    command: sh -c "npm install && npx nodemon --legacy-watch index.js"
